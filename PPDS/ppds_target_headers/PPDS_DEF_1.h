/* AUTOGENERATED, DO NOT EDIT. */
/* This file was created by PPDS. */

/* This file contains definitions generated by DECLARE statements.*/


// public:
#define X(i) x[X_assert_in_bounds(i), X_WRAP_len(i)]

// internal:



#if 0 // numpy_wraparound
#define X_WRAP_len(i) (i < 0 ? (500+ i) : i)
#else // numpy_wraparound
#define X_WRAP_len(i) i
#endif // numpy_wraparound

#if NDEBUG // skip_checks

#define X_assert_in_bounds_of_len(i, expr_name) ((void)0)

#else // skip_checks

#   if 0 // numpy_wraparound

#define X_assert_in_bounds_of_len(i, expr_name) ((((i) >= 500) || ((i) < -(500))) ? X_assert_fail(i, expr_name, 500, "len") : ((void)0))

#   else // numpy_wraparound

#define X_assert_in_bounds_of_len(i, expr_name) ((((i) >= 500) || ((i) < 0) )? X_assert_fail(i, expr_name, 500, "len") : ((void)0))

// #define X_assert_in_bounds_of_len(i, expr_name) do{(if((((i) >= 500) || ((i) < 0) ) { X_assert_fail(i, expr_name, 500, "len") } }while(0)

#   endif // numpy_wraparound

#endif //skip_checks



#define X_assert_in_bounds(i) X_assert_in_bounds_of_len(i,#i)



#define X_assert_fail(index_val, index_expr, dim_size, dim_name) \
	fprintf(stderr,"\n\n----> ppds ASSERTION FAILURE: INDEX OUT OF BOUNDS <----\n"),\
  fprintf(stderr,"index " index_expr " (="), PRINT(index_val),\
  fprintf(stderr,") is out of bounds for axis " dim_name " of size "), PRINT(dim_size), fprintf(stderr, "="), PRINT(dim_size),\
  fprintf(stderr, "  (numpy_wraparound is 0).\n"),\
	fprintf(stderr,"\ndetected in line %d, function %s, file %s\n",__LINE__,__func__,__FILE__),\
	fprintf(stderr, "with the object X declared in file: tests/full_examples/index_error_can_raise/main.c, line 25 of type ARR1D\n"),\
  fprintf(stderr, " calling panic action: throw_bad_index()\n"),\
  throw_bad_index()




